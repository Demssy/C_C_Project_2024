@using C_C_Proj_WebStore.Utility
@model ShoppingCard

<form method="post" class="mb-5">
    <input type="hidden" asp-for="ProductId" />
    <div class="card shadow border-0 mt-2 mb-2">
        <div class="card-header bg-secondary bg-gradient text-light py-4">
            <div class="row">
                <div class="col-12 text-center">
                    <h3 class="text-white text-uppercase">@Model.Product.ShoeModel</h3>
                    <p class="text-white-50 fw-semibold mb-0">by @Model.Product.Brand</p>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="py-3">
                <div class="row">
                    <div class="col-6 col-md-2 offset-lg-1 pb-1 ">
                        <a asp-action="Index" class="btn btn-outline-primary bg-gradient mb-5 fw-semibold btn-sm text-uppercase">
                            <small>Back to home</small>
                        </a>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 col-lg-3 offset-lg-1 text-center mb-3">


                        @if (Model.Product.ProductImages != null && Model.Product.ProductImages.Count > 0)
                        {
                            <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
                                <div class="carousel-indicators">

                                    @foreach (var imageWithIndex in Model.Product.ProductImages.Select((image, index) => new { ProductImage = image, Index = index }))
                                    {
                                        <button type="button" data-bs-target="#carouselExampleControls" data-bs-slide-to="@imageWithIndex.Index"
                                                class="@(imageWithIndex.Index==0?"active":"")" aria-current="true" aria-label="Slide 1"></button>

                                    }


                                </div>
                                <div class="carousel-inner">
                                    @foreach (var imageWithIndex in Model.Product.ProductImages.Select((image, index) => new { ProductImage = image, Index = index }))
                                    {
                                        <div class="@(imageWithIndex.Index==0?"carousel-item active":"carousel-item")">
                                            <img src="@imageWithIndex.ProductImage.ImageUrl" class=" d-block w-100" alt="...">

                                        </div>
                                    }
                                </div>
                                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>

                        }


                    </div>
                    <div class="col-12 col-lg-6 offset-lg-1">

                        <div class="col-12 col-md-6 pb-4">
                            <span class="badge bg-success">Category @Model.Product.Category.Name</span>
                        </div>
                        <div class="row ps-2">
                            <h6 class="text-white text-opacity-50 ">Size : <span class="badge bg-primary"> @Model.Product.Size.ToString()</span></h6>
                        </div>
                        <div class="row ps-2">
                            <h6 class="text-white text-opacity-50 ">Color : <span class="badge bg-primary"> @Model.Product.Color</span></h6>
                        </div>
                        <div class="row ps-2">
                            <h6 class="text-white text-opacity-50 ">Gender : <span class="badge bg-primary"> @Model.Product.Gender</span></h6>
                        </div>
                        <div class="row ps-2">
                            <h6 class="text-white text-opacity-50 ">Age Group : <span class="badge bg-primary"> @Model.Product.AgeGroup</span></h6>
                        </div>
                        @if (Model.Product.StockStatus == SD.OutOfStock || Model.Product.StockStatus == SD.Ordered)
                        {
                            <div class="row ps-2">
                                <h6 class="text-white text-opacity-50 ">Availability : <span class="badge bg-warning"> Out of Stock</span></h6>
                            </div>
                        }
                        else
                        {
                            <div class="row ps-2">
                                <h6 class="text-white text-opacity-50 ">Availability : <span class="badge bg-success"> Available In Stock</span></h6>
                            </div>
                        }
                        @if(Model.Product.Discount > 0){

                            <div class="row ps-2">
                                <h6 class="text-white text-opacity-50 ">
                                    Sale : <span class="badge bg-success">
                                    @Model.Product.Discount.ToString("P0")
                                </span></h6>
                            </div>
                        }
                        <div class="row ps-2">
                            <h6 class="text-white text-opacity-50  pb-2">
                                List Price:
                                <span class="badge bg-primary text-decoration-line-through">
                                    @Model.Product.ListPrice.ToString("c")
                                </span>
                            </h6>
                        </div>
                        <div class="row text-center ps-2 ">
                            <div class="p-1 col-3 col-lg-2 bg-white border-bottom">
                                <div class="text-dark text-opacity-50 fw-semibold">Quantity</div>
                            </div>
                            @if (Model.Product.Discount > 0)
                            {
                                <div class="p-1 col-3 col-lg-2 bg-white border-bottom">
                                    <div class="text-dark text-opacity-50 fw-semibold">After Sale</div>
                                </div>
                            }
                            <div class="p-1 col-3 col-lg-2 bg-white border-bottom">
                                <div class="text-dark text-opacity-50 fw-semibold">1-50</div>
                            </div>
                            <div class="p-1 col-3 col-lg-2 bg-white border-bottom">
                                <div class="text-dark text-opacity-50 fw-semibold">51-100</div>
                            </div>
                            <div class="p-1 col-3 col-lg-2 bg-white border-bottom">
                                <div class="text-dark text-opacity-50 fw-semibold">100+</div>
                            </div>
                        </div>
                        <div class="row text-center ps-2 ">
                            <div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
                                <div>Price</div>
                            </div>
                            @if (Model.Product.Discount > 0)
                            {
                                <div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
                                    <div>@((Model.Product.Price - (Model.Product.Price * Model.Product.Discount)).ToString("c"))</div>
                                </div>
                            }
                            <div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
                                <div>@Model.Product.Price.ToString("c")</div>
                            </div>
                            <div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
                                <div>@Model.Product.Price50.ToString("c")</div>
                            </div>
                            <div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
                                <div>@Model.Product.Price100.ToString("c")</div>
                            </div>
                        </div>
                        <div class="row pl-2 my-3">
                            <p class="text-secondary lh-sm">@Html.Raw(@Model.Product.Description)</p>
                        </div>
                        <div class="row pl-2 mb-3">
                            <div class="col-md-4">
                                <div class="input-group mb-3">
                                    <span class="input-group-text bg-primary text-white border-0 fw-semibold"
                                          id="inputGroup-sizing-default">
                                        Count
                                    </span>
                                    @if (Model.Product.StockStatus == SD.OutOfStock || Model.Product.StockStatus == SD.Ordered)
                                    {
                                        <input asp-for="@Model.Count" type="number" value="1" class="form-control text-end" disabled
                                               aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default" />
                                    }
                                    else
                                    {
                                        <input asp-for="@Model.Count" type="number" value="1" class="form-control text-end"
                                               aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default" />
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 col-md-6 pb-1">
                                @if (Model.Product.StockStatus == SD.OutOfStock || Model.Product.StockStatus == SD.Ordered)
                                {
                                    <button type="submit" asp-action="NotifyMe"
                                            class="btn btn-primary bg-gradient  w-100 py-2 text-uppercase fw-semibold">
                                        Notify Me
                                    </button>
                                }
                                else
                                {
                                    <button type="submit"
                                            class="btn btn-primary bg-gradient  w-100 py-2 text-uppercase fw-semibold">
                                        Add to Cart
                                    </button>
                                    <button type="submit" asp-action="BuyNow"
                                            class="btn btn-primary bg-gradient  w-100 py-2 text-uppercase fw-semibold mt-2">
                                        Buy Now
                                    </button>
                                }
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
</form>


@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons lists  table visualblocks wordcount',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough  | align lineheight | checklist numlist bullist indent outdent',
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
    <script>
        function appendPercentageSymbol(inputElement) {
            if (!inputElement.value.includes('%')) {
                inputElement.value = inputElement.value + '%';
            }
        }
    </script>
}