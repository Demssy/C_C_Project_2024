@model List<ShoppingCard>


<div class="container row pt-4">
    <div class="col-12 text-center">
        <h1 class="text-white" style="font-size: 24px;">Order Placed Successfully</h1>
    </div>
    <div class="col-12 text-center text-warning">
        <h3>Your order details</p>
    </div>
</div>
<div class="container row pt-4 text-center">
    <div class="row pb-3 mb-4 align-content-center">
    
        @{
            int i = 0;
        }
        @foreach (var item in Model)
        {
            <div class="col-lg-4 col-sm-6 animateWithBounce">
                <div class="row p-2">
                    <div class="col-12 p-1">
                        <div class="card mb-3 border-0  border-top border-0 rounded">
                            <h3 class="card-header">@item.Product.ShoeModel</h3>
                            <div class="card-body">
                                <h5 class="card-title text-primary"><b>By @item.Product.Brand</b></h5>
                            </div>
                            <div class="card-img">

                                @if (item.Product.ProductImages != null && item.Product.ProductImages.Count > 0)
                                {
                                    <div id="carouselExampleControls@(i)" class="carousel slide" data-bs-ride="carousel">
                                        <div class="carousel-indicators">

                                            @foreach (var imageWithIndex in item.Product.ProductImages.Select((image, index) => new { ProductImage = image, Index = index }))
                                            {
                                                <button type="button" data-bs-target="#carouselExampleControls@(i)" data-bs-slide-to="@imageWithIndex.Index"
                                                        class="@(imageWithIndex.Index==0?"active":"")" aria-current="true" aria-label="Slide 1"></button>

                                            }


                                        </div>
                                        <div class="carousel-inner">
                                            @foreach (var imageWithIndex in item.Product.ProductImages.Select((image, index) => new { ProductImage = image, Index = index }))
                                            {
                                                <div class="@(imageWithIndex.Index==0?"carousel-item active":"carousel-item")">
                                                    <img src="@imageWithIndex.ProductImage.ImageUrl" class=" d-block w-100" alt="...">

                                                </div>
                                            }
                                        </div>
                                        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls@(i)" data-bs-slide="prev">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Previous</span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls@(i)" data-bs-slide="next">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Next</span>
                                        </button>
                                    </div>
                                }

                                @* @if (item.ProductImages != null && item.ProductImages.Count() > 0)
                            {
                            <img src="@item.ProductImages.FirstOrDefault().ImageUrl" class="card-img-top rounded border-1 rounded d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size:1.125rem;text-anchor:middle" />
                            <rect width="100%" height="100%" fill="#868e96"></rect>
                            } *@
                                else
                                {
                                    <div class="carousel-inner">
                                        <img src="https://placehold.co/500x600/png" class="card-img-top rounded border-1 rounded d-block user-select-none" width="100%" height="208" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size:1.125rem;text-anchor:middle" />
                                        <rect width="100%" height="100%" fill="#868e96"></rect>
                                    </div>
                                }

                            </div>
                            <div class="card-body">
                                <figure class="text-center">
                                    <blockquote class="blockquote">
                                        <p class="mb-0 card-text">@Html.Raw(@item.Product.Description)</p>

                                    </blockquote>

                                </figure>

                            </div>

                            <ul class="list-group list-group-flush" style="min-height: 206px;">
                                <li class="list-group-item text-center">  <span class="badge rounded-pill bg-primary">Category @item.Product.Category.Name</span></li>
                                <li class="list-group-item text-center">  <span class="badge rounded-pill bg-primary">Color @item.Product.Color</span></li>
                                <li class="list-group-item text-center">  <span class="badge rounded-pill bg-primary">Size @item.Product.Size</span></li>
                                <li class="list-group-item text-center">List Price : <span class=" text-decoration-line-through text-warning ">@item.Product.ListPrice.ToString("c")</span></li>
                                @if (item.Product.Discount * item.Product.ListPrice < item.Product.Price100 && item.Product.Discount * item.Product.ListPrice != 0)
                                {
                                    <li class="list-group-item text-center">Price:  <span class="text-warning">@((item.Price - (item.Product.Discount * item.Price)).ToString("c"))</span></li>
                                }
                                else
                                {
                                    <li class="list-group-item text-center">Price:  <span class="text-warning">@item.Product.Price100.ToString("c")</span></li>
                                }
                            </ul>


                        </div>
                    </div>
                </div>
            </div>
            i++;
        }
    </div>
</div>
